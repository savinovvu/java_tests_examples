plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'checkstyle'
    id("org.openrewrite.rewrite") version("5.33.2")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-security"

// if you need thymeleaf spring-security or layout additions:
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"
    implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('test') {
    useJUnitPlatform()
}


sourceSets {
    integration {
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
    }
}

task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath

    testLogging.showStandardStreams = true
}

tasks.named('integration') {
    useJUnitPlatform()
}


checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

checkstyleMain.enabled = true
checkstyleTest.enabled = true
checkstyleIntegration.enabled = true

rewrite {
    activeRecipe("org.openrewrite.java.cleanup.Cleanup")
    checkstyleConfigFile = rootProject.file('config/checkstyle/checkstyle.xml')
}
